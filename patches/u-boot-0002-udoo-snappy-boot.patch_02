--- u-boot/include/configs/udoo.h_orig	2015-02-15 18:29:59.261658003 +0100
+++ u-boot/include/configs/udoo.h	2015-02-15 18:31:39.847576173 +0100
@@ -108,190 +108,39 @@
 
 #define CONFIG_EXTRA_ENV_SETTINGS \
 	"script=boot.scr\0" \
-	"image=zImage\0" \
-	"console=ttymxc1,115200\0" \
+	"bootfile=auto\0" \
+	"bootenv=uEnv.txt\0" \
+	"file_prefix=/\0" \
+	"console=ttymxc0\0" \
+	"stdin=serial,usbkbd\0" \
+	"stdout=serial,vga\0" \
+	"stderr=serial,vga\0" \
 	"splashpos=m,m\0" \
 	"fdt_high=0xffffffff\0" \
 	"initrd_high=0xffffffff\0" \
-	"fdt_file=" CONFIG_DEFAULT_FDT_FILE "\0" \
 	"fdt_addr=0x18000000\0" \
-	"rdaddr=0x12A00000\0" \
 	"boot_fdt=try\0" \
 	"ip_dyn=yes\0" \
-	"optargs=\0" \
-	"cmdline=\0" \
-	"mmcdev=0\0" \
+	"mmcdev=" __stringify(CONFIG_SYS_MMC_ENV_DEV) "\0" \
 	"mmcpart=1\0" \
-	"mmcroot=/dev/mmcblk0p2 ro\0" \
-	"mmcrootfstype=ext4 rootwait\0" \
-	"update_sd_firmware_filename=u-boot.imx\0" \
-	"update_sd_firmware=" \
-		"if test ${ip_dyn} = yes; then " \
-			"setenv get_cmd dhcp; " \
-		"else " \
-			"setenv get_cmd tftp; " \
-		"fi; " \
-		"if mmc dev ${mmcdev}; then "	\
-			"if ${get_cmd} ${update_sd_firmware_filename}; then " \
-				"setexpr fw_sz ${filesize} / 0x200; " \
-				"setexpr fw_sz ${fw_sz} + 1; "	\
-				"mmc write ${loadaddr} 0x2 ${fw_sz}; " \
-			"fi; "	\
-		"fi\0" \
-	"mmcargs=setenv bootargs console=${console} " \
-		"${optargs} " \
-		"root=${mmcroot} " \
-		"rootfstype=${mmcrootfstype} " \
-		"${cmdline}\0" \
+	"mmcroot=/dev/mmcblk0p2 rootwait rw\0" \
+	"mmcargs=setenv bootargs console=${console},${baudrate} " \
+		"root=${mmcroot};\0" \
 	"loadbootscript=" \
-		"fatload mmc ${mmcdev}:${mmcpart} ${loadaddr} ${script};\0" \
+		"load mmc ${mmcdev}:${mmcpart} ${loadaddr} ${file_prefix}${script};\0" \
 	"bootscript=echo Running bootscript from mmc ...; " \
-		"source\0" \
-	"loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}\0" \
-	"loadrd=load mmc ${bootpart} ${rdaddr} ${bootdir}/${rdfile}; setenv rdsize ${filesize}\0" \
-	"loadfdt=echo loading ${fdtdir}/${fdt_file} ...;  load mmc ${bootpart} ${fdt_addr} ${fdtdir}/${fdt_file}\0" \
-	"mmcboot=mmc dev ${mmcdev}; " \
-		"if mmc rescan; then " \
-			"echo SD/MMC found on device ${mmcdev};" \
-			"setenv bootpart ${mmcdev}:1; " \
-			"echo Checking for: /uEnv.txt ...;" \
-			"if test -e mmc ${bootpart} /uEnv.txt; then " \
-				"load mmc ${bootpart} ${loadaddr} /uEnv.txt;" \
-				"env import -t ${loadaddr} ${filesize};" \
-				"echo Loaded environment from /uEnv.txt;" \
-				"echo Checking if uenvcmd is set ...;" \
-				"if test -n ${uenvcmd}; then " \
-					"echo Running uenvcmd ...;" \
-					"run uenvcmd;" \
-				"fi;" \
-			"fi; " \
-			"echo Checking for: /boot/uEnv.txt ...;" \
-			"for i in 1 2 3 4 5 6 7 ; do " \
-				"setenv mmcpart ${i};" \
-				"setenv bootpart ${mmcdev}:${mmcpart};" \
-				"if test -e mmc ${bootpart} /boot/uEnv.txt; then " \
-					"load mmc ${bootpart} ${loadaddr} /boot/uEnv.txt;" \
-					"env import -t ${loadaddr} ${filesize};" \
-					"echo Loaded environment from /boot/uEnv.txt;" \
-					"if test -n ${dtb}; then " \
-						"setenv fdt_file ${dtb};" \
-						"echo Using: dtb=${fdt_file} ...;" \
-					"fi;" \
-					"echo Checking if uname_r is set in /boot/uEnv.txt...;" \
-					"if test -n ${uname_r}; then " \
-						"echo Running uname_boot ...;" \
-						"setenv mmcroot /dev/mmcblk${mmcdev}p${mmcpart} ro;" \
-						"run uname_boot;" \
-					"fi;" \
-				"fi;" \
-			"done;" \
-		"fi;\0" \
-	"mmcboot_old=echo Booting from mmc ...; " \
-		"run mmcargs; " \
-		"if test ${boot_fdt} = yes || test ${boot_fdt} = try; then " \
-			"if run loadfdt; then " \
-				"bootz ${loadaddr} - ${fdt_addr}; " \
-			"else " \
-				"if test ${boot_fdt} = try; then " \
-					"bootz; " \
-				"else " \
-					"echo WARN: Cannot load the DT; " \
-				"fi; " \
-			"fi; " \
-		"else " \
-			"bootz; " \
-		"fi;\0" \
-	"netargs=setenv bootargs console=${console},${baudrate} " \
-		"root=/dev/nfs " \
-	"ip=dhcp nfsroot=${serverip}:${nfsroot},v3,tcp\0" \
-		"netboot=echo Booting from net ...; " \
-		"run netargs; " \
-		"if test ${ip_dyn} = yes; then " \
-			"setenv get_cmd dhcp; " \
-		"else " \
-			"setenv get_cmd tftp; " \
-		"fi; " \
-		"${get_cmd} ${image}; " \
-		"if test ${boot_fdt} = yes || test ${boot_fdt} = try; then " \
-			"if ${get_cmd} ${fdt_addr} ${fdt_file}; then " \
-				"bootz ${loadaddr} - ${fdt_addr}; " \
-			"else " \
-				"if test ${boot_fdt} = try; then " \
-					"bootz; " \
-				"else " \
-					"echo WARN: Cannot load the DT; " \
-				"fi; " \
-			"fi; " \
+		"source ${loadaddr};\0" \
+	"autodetectfdt=setenv fdt_file imx6q-udoo.dtb;\0" \
+	"loadbootenv=load mmc ${mmcdev}:${mmcpart} ${loadaddr} ${file_prefix}${bootenv};\0" \
+	"importbootenv=echo Importing environment from mmc${mmcdev} ...; " \
+		"env import -t ${loadaddr} ${filesize};\0" \
+	"loadfdt=if test ${boottype} = mmc; then " \
+			"load mmc ${mmcdev}:${mmcpart} ${fdt_addr} ${file_prefix}${fdt_file}; " \
 		"else " \
-			"bootz; " \
-		"fi;\0" \
-	"uname_boot="\
-		"setenv bootdir /boot; " \
-		"setenv bootfile vmlinuz-${uname_r}; " \
-		"if test -e mmc ${bootpart} ${bootdir}/${bootfile}; then " \
-			"echo loading ${bootdir}/${bootfile} ...; "\
-			"run loadimage;" \
-			"setenv fdtdir /boot/dtbs/${uname_r}; " \
-			"if test -e mmc ${bootpart} ${fdtdir}/${fdt_file}; then " \
-				"run loadfdt;" \
-			"else " \
-				"setenv fdtdir /usr/lib/linux-image-${uname_r}; " \
-				"if test -e mmc ${bootpart} ${fdtdir}/${fdt_file}; then " \
-					"run loadfdt;" \
-				"else " \
-					"setenv fdtdir /lib/firmware/${uname_r}/device-tree; " \
-					"if test -e mmc ${bootpart} ${fdtdir}/${fdt_file}; then " \
-						"run loadfdt;" \
-					"else " \
-						"setenv fdtdir /boot/dtb-${uname_r}; " \
-						"if test -e mmc ${bootpart} ${fdtdir}/${fdt_file}; then " \
-							"run loadfdt;" \
-						"else " \
-							"setenv fdtdir /boot/dtbs; " \
-							"if test -e mmc ${bootpart} ${fdtdir}/${fdt_file}; then " \
-								"run loadfdt;" \
-							"else " \
-								"setenv fdtdir /boot/dtb; " \
-								"if test -e mmc ${bootpart} ${fdtdir}/${fdt_file}; then " \
-									"run loadfdt;" \
-								"else " \
-									"setenv fdtdir /boot; " \
-									"if test -e mmc ${bootpart} ${fdtdir}/${fdt_file}; then " \
-										"run loadfdt;" \
-									"else " \
-										"echo; echo unable to find ${fdt_file} ...; echo booting legacy ...;"\
-										"run mmcargs;" \
-										"echo debug: [${bootargs}] ... ;" \
-										"echo debug: [bootz ${loadaddr}] ... ;" \
-										"bootz ${loadaddr}; " \
-									"fi;" \
-								"fi;" \
-							"fi;" \
-						"fi;" \
-					"fi;" \
-				"fi;" \
-			"fi; " \
-			"setenv rdfile initrd.img-${uname_r}; " \
-			"if test -e mmc ${bootpart} ${bootdir}/${rdfile}; then " \
-				"echo loading ${bootdir}/${rdfile} ...; "\
-				"run loadrd;" \
-				"if test -n ${uuid}; then " \
-					"setenv mmcroot UUID=${uuid} ro;" \
-				"fi;" \
-				"run mmcargs;" \
-				"echo debug: [${bootargs}] ... ;" \
-				"echo debug: [bootz ${loadaddr} ${rdaddr}:${rdsize} ${fdt_addr}] ... ;" \
-				"bootz ${loadaddr} ${rdaddr}:${rdsize} ${fdt_addr}; " \
-			"else " \
-				"run mmcargs;" \
-				"echo debug: [${bootargs}] ... ;" \
-				"echo debug: [bootz ${loadaddr} - ${fdt_addr}] ... ;" \
-				"bootz ${loadaddr} - ${fdt_addr}; " \
-			"fi;" \
-		"fi;\0"
+			"${get_cmd} ${fdt_addr} ${fdt_file}; " \
+		"fi;\0 "
 
-#define CONFIG_BOOTCOMMAND \
-	   "run mmcboot; "
+#define CONFIG_BOOTCOMMAND "run loadbootscript; run bootscript;\0 "
 
 /* Miscellaneous configurable options */
 #define CONFIG_SYS_LONGHELP
@@ -333,6 +182,7 @@
 #define CONFIG_OF_LIBFDT
 #define CONFIG_CMD_BOOTZ
 #define CONFIG_SUPPORT_RAW_INITRD
+#define CONFIG_FAT_WRITE
 
 #ifndef CONFIG_SYS_DCACHE_OFF
 #define CONFIG_CMD_CACHE
